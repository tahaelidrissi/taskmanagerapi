name: Build and Deploy via SSH

on:
  push:
    branches:
      - pwd-deployment-appleboy

env:
  IMAGE_NAME: taskmanagerapi

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:latest

      - name: Deploy to PWD using SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: direct.labs.play-with-docker.com
          username: ${{ secrets.PWD_USERNAME }}
          key: ${{ secrets.PWD_SSH_KEY }}
          port: 22
          debug: true
          timeout: 120s
          command_timeout: 15m
          script: |
            set -e

            echo "🔍 System info on PWD:"
            uname -a
            echo "🔧 Current directory: $(pwd)"
            echo "💾 Disk usage:"
            df -h .

            echo "🔍 Checking Git availability..."
            if ! command -v git > /dev/null; then
              echo "❌ Git not installed"; exit 1;
            else
              echo "✅ Git: $(git --version)"
            fi

            echo "📁 Cloning or updating repo..."
            if [ -d taskmanagerapi ]; then
              cd taskmanagerapi
              echo "📂 Project contents after clone:"
              echo "aa"
              pwd
              ls -la
              git checkout pwd-deployment-appleboy 
              echo "checkout daz"
            else
              git clone --depth 1 https://github.com/tahaelidrissi/taskmanagerapi.git || exit 1
              cd taskmanagerapi
              echo "📂 Project contents after clone:"
              pwd
              ls -la
              git checkout pwd-deployment-appleboy || exit 1
            fi

            echo "📄 Checking stack.yml..."
            [ -f stack.yml ] || { echo "❌ stack.yml not found"; ls -la; exit 1; }

            echo "🕒 Waiting for Docker to be ready..."
            for i in {1..5}; do
              echo "⏳ Waiting $((i*5)) seconds before checking Docker..."
              sleep 5
            done

            echo "✅ Finished waiting. Docker check starts now."


            echo "📦 Checking Docker status..."

            echo "🐳 Attempting docker info now..."

            docker info || { echo "❌ Docker is not ready"; exit 1; }

            echo "🐳 Logging into Docker Hub..."
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin || exit 1

            echo "📥 Pulling image..."
            docker pull "${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:latest" || exit 1

            echo "🚀 Deploying stack..."
            docker stack deploy -c stack.yml --with-registry-auth taskmanager || exit 1

            echo "✅ Deployment finished!"
