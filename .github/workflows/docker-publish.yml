name: Build and Deploy via SSH

on:
  push:
    branches:
      - pwd-deployment-appleboy

env:
  IMAGE_NAME: taskmanagerapi

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:latest

      - name: Deploy to PWD using SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: direct.labs.play-with-docker.com
          username: ${{ secrets.PWD_USERNAME }}
          key: ${{ secrets.PWD_SSH_KEY }}
          port: 22
          debug: true
          timeout: 120s
          command_timeout: 15m
          script: |
            set -e

            echo "🔍 System info on PWD:"
            uname -a

            echo "🔧 Current directory: $(pwd)"
            echo "💾 Disk usage:"
            df -h .

            echo "🔍 Checking Git availability..."
            if ! command -v git > /dev/null; then
              echo "❌ Git not installed"; exit 1;
            else
              echo "✅ Git: $(git --version)"
            fi

            echo "📁 Cloning repo..."
            git clone --branch pwd-deployment-appleboy https://github.com/tahaelidrissi/taskmanagerapi.git || exit 1
            cd taskmanagerapi
            echo "📂 Project contents:"
            ls -la

            echo "📄 Checking stack.yml..."
            [ -f stack.yml ] || { echo "❌ stack.yml not found"; exit 1; }

            echo "📝 Creating .env file..."
            echo "MONGODB_URI=${{ secrets.MONGO_URI }}" > .env
           
            echo "🐳 Attempting docker info..."
            docker info || { echo "❌ Docker is not ready"; exit 1; }

            echo "🐳 Logging into Docker Hub..."
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin || exit 1

            echo "📥 Pulling image..."
            docker pull "${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:latest" || exit 1

            echo "🐳 Initializing swarm (if not already)..."
            docker info | grep "Swarm: active" || docker swarm init --advertise-addr $(hostname -i)

            echo "🚀 Deploying stack..."
            docker stack deploy -c stack.yml --with-registry-auth taskmanager || exit 1

            echo "✅ Deployment finished!"
