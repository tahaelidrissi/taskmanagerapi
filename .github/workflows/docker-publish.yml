name: Build and Deploy to Swarm

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: taskmanagerapi
  MONGO_URI: ${{ secrets.MONGO_URI }}

jobs:
  build_and_prepare:
    runs-on: ubuntu-latest
    steps:
      - name: 🧾 Checkout code
        uses: actions/checkout@v3

      - name: 🔐 Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 🛠 Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:latest .

      - name: 📦 Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:latest

      - name: 🔁 SSH - Clone repo on PWD
        uses: appleboy/ssh-action@v0.1.10
        continue-on-error: true
        with:
          host: direct.labs.play-with-docker.com
          username: ${{ secrets.PWD_USERNAME }}
          key: ${{ secrets.PWD_SSH_KEY }}
          port: 22
          debug: true
          timeout: 120s
          command_timeout: 15m
          script: |
            set -ex
            echo "🔍 System info:"
            uname -a
            df -h .
            echo "📁 Cloning repository"
            git clone --branch pwd-deployment-appleboy https://github.com/tahaelidrissi/taskmanagerapi.git
            ls -la

      - name: 📝 Create .env on PWD
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: direct.labs.play-with-docker.com
          username: ${{ secrets.PWD_USERNAME }}
          key: ${{ secrets.PWD_SSH_KEY }}
          port: 22
          debug: true
          timeout: 120s
          command_timeout: 15m
          envs: MONGO_URI
          script: |
            set -ex
            cd taskmanagerapi || { echo "❌ Repo folder not found"; exit 1; }
            echo "📝 Creating .env"
            echo "MONGO_URI=$MONGO_URI" > .env

  deploy_to_swarm:
    needs: build_and_prepare
    runs-on: ubuntu-latest
    steps:
      - name: 🔁 Checkout code
        uses: actions/checkout@v3

      - name: 🚀 Deploy to Docker Swarm
        uses: sagebind/docker-swarm-deploy-action@v2
        with:
          remote_host: ${{ secrets.REMOTE_HOST }}
          ssh_private_key: ${{ secrets.PWD_SSH_KEY }}
          args: stack deploy --compose-file stack.yml coolapp
