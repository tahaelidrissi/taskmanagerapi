name: Build and Deploy via SSH

on:
  push:
    branches:
      - pwd-deployment-appleboy

env:
  IMAGE_NAME: taskmanagerapi

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:latest

      - name: Deploy to PWD using SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: direct.labs.play-with-docker.com
          username: ${{ secrets.PWD_USERNAME }}
          key: ${{ secrets.PWD_SSH_KEY }}
          port: 22
          debug: true
          timeout: 120s
          command_timeout: 15m
          envs: IMAGE_NAME
          script: |
            set -ex  # stop on error + show each command

            echo "🔍 [1] System info on PWD"
            uname -a

            echo "💽 [2] Disk usage"
            df -h .

            echo "📁 [3] Cloning repo"
            git clone --branch pwd-deployment-appleboy https://github.com/tahaelidrissi/taskmanagerapi.git || exit 1
            ls -la
            cd taskmanagerapi || { echo "❌ cd taskmanagerapi failed"; exit 1; }

            echo "📄 [4] Checking stack.yml"
            [ -f stack.yml ] || { echo "❌ stack.yml not found"; exit 1; }

            echo "📝 [5] Creating .env"
            echo "MONGODB_URI=${{ secrets.MONGO_URI }}" > .env
            echo "[DEBUG] .env content:"
            cat .env || { echo "❌ .env not created properly"; exit 1; }

            echo "🐳 [6] Docker readiness check"
            for i in {1..5}; do
              docker info && break
              echo "⏳ Docker not ready yet, retrying..."
              sleep 5
            done

            echo "🔐 [7] Docker login"
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
            docker info | grep Username || { echo "❌ Docker login failed"; exit 1; }

            echo "📥 [8] Pulling image"
            docker pull "${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:latest" || { echo "❌ Image pull failed"; exit 1; }

            echo "🔄 [9] Swarm init"
            docker info | grep "Swarm: active" || docker swarm init --advertise-addr $(hostname -i)
            docker info | grep "Swarm: active" || { echo "❌ Swarm not active"; exit 1; }

            echo "🚀 [10] Deploying stack"
            docker stack deploy -c stack.yml --with-registry-auth taskmanager

            echo "🔎 [11] Services running?"
            docker service ls || { echo "❌ No services running"; exit 1; }

            echo "✅ [12] Deployment complete"
