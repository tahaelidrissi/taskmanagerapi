name: Build and Deploy via SSH

on:
  push:
    branches:
      - pwd-deployment-appleboy

env:
  IMAGE_NAME: taskmanagerapi

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:latest

      - name: Deploy to PWD using SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: direct.labs.play-with-docker.com
          username: ${{ secrets.PWD_USERNAME }}
          key: ${{ secrets.PWD_SSH_KEY }}
          port: 22
          debug: true
          timeout: 120s
          command_timeout: 15m
          envs: IMAGE_NAME,MONGO_URI,DOCKERHUB_USERNAME,DOCKERHUB_TOKEN
          script: |
            set -ex

            echo "🔍 System info on PWD:"
            uname -a

            echo "📦 Disk available:"
            df -h .

            echo "📁 Cloning repo."
            git clone --branch pwd-deployment-appleboy https://github.com/tahaelidrissi/taskmanagerapi.git || exit 1
            cd taskmanagerapi
            ls -la

            echo "📄 Checking stack.yml."
            [ -f stack.yml ] || { echo "❌ stack.yml not found"; exit 1; }

            echo "📝 Creating .env file."
            echo "MONGODB_URI=$MONGO_URI" > .env


            echo "🐳 Waiting for Docker..."
            for i in {1..5}; do
              docker info && break
              echo "⏳ Docker not ready yet, retrying..."
              sleep 5
            done

            echo "🐳 Logging into Docker Hub."
            echo "$DOCKERHUB_TOKEN" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin

            echo "📥 Pulling image: $IMAGE_NAME"
            docker pull "$DOCKERHUB_USERNAME/$IMAGE_NAME:latest"

            echo "🐳 Initializing swarm (if not already)."
            docker info | grep "Swarm: active" || docker swarm init --advertise-addr $(hostname -i)

            echo "🚀 Deploying stack."
            docker stack deploy -c stack.yml --with-registry-auth taskmanager

            echo "✅ Deployment finished!"
