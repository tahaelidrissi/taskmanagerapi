name: Build and Deploy via SSH
on:
  push:
    branches:
      - docker-swarm-deploy
env:
  IMAGE_NAME: taskmanagerapi
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:latest .
      
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:latest
      
      - name: Download code to PWD (may timeout but works)
        uses: appleboy/ssh-action@v0.1.10
        continue-on-error: true
        with:
          host: direct.labs.play-with-docker.com
          username: ${{ secrets.PWD_USERNAME }}
          key: ${{ secrets.PWD_SSH_KEY }}
          port: 22
          timeout: 30s
          command_timeout: 60s
          script: |
            echo "ðŸ”§ Downloading code..."
            rm -rf taskmanagerapi
            curl -L -o repo.zip https://github.com/${{ github.repository }}/archive/refs/heads/docker-swarm-deploy.zip && unzip -q repo.zip && mv taskmanagerapi-docker-swarm-deploy taskmanagerapi && rm -f repo.zip
            echo "âœ… Download completed!"
      
      - name: Setup SSH Key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.PWD_SSH_KEY }}
      
      - name: Deploy with shimataro/ssh-key-action
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.PWD_SSH_KEY }}
          known_hosts: unnecessary
          if_key_exists: replace
      
      - name: Deploy to PWD
        run: |
          ssh -o StrictHostKeyChecking=no -o ConnectTimeout=30 ${{ secrets.PWD_USERNAME }}@direct.labs.play-with-docker.com '
          rm -rf taskmanagerapi
          curl -L -o repo.zip https://github.com/${{ github.repository }}/archive/refs/heads/docker-swarm-deploy.zip
          unzip -q repo.zip
          mv taskmanagerapi-docker-swarm-deploy taskmanagerapi
          rm -f repo.zip
          cd taskmanagerapi
          export MONGO_URI="${{ secrets.MONGO_URI }}"
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          docker pull "${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest"
          docker stack deploy -c stack.yml --with-registry-auth taskmanager
          echo "Deployment completed!"