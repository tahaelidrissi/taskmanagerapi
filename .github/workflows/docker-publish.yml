name: Build and Deploy via SSH
on:
  push:
    branches:
      - docker-swarm-deploy
env:
  IMAGE_NAME: taskmanagerapi
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:latest .
      
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:latest
      
      - name: Download code to PWD
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: direct.labs.play-with-docker.com
          username: ${{ secrets.PWD_USERNAME }}
          key: ${{ secrets.PWD_SSH_KEY }}
          port: 22
          timeout: 60s
          command_timeout: 3m
          script: |
            echo "üîß Downloading code..."
            rm -rf taskmanagerapi
            curl -L -o repo.zip https://github.com/${{ github.repository }}/archive/refs/heads/docker-swarm-deploy.zip
            unzip -q repo.zip
            mv taskmanagerapi-docker-swarm-deploy taskmanagerapi
            rm repo.zip
            echo "‚úÖ Code downloaded successfully!"
      
      - name: Verify and deploy stack
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: direct.labs.play-with-docker.com
          username: ${{ secrets.PWD_USERNAME }}
          key: ${{ secrets.PWD_SSH_KEY }}
          port: 22
          timeout: 60s
          command_timeout: 5m
          script: |
            echo "üîß Starting deployment..."
            cd taskmanagerapi
            
            if [ -f "stack.yml" ]; then
              echo "‚úÖ stack.yml found!"
              cat stack.yml
            else
              echo "‚ùå stack.yml not found!"
              ls -la
              exit 1
            fi
            
            # Set environment variables
            export MONGO_URI="${{ secrets.MONGO_URI }}"
            
            # Login to Docker Hub
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
            
            # Pull image
            docker pull "${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:latest"
            
            # Deploy stack
            docker stack deploy -c stack.yml --with-registry-auth taskmanager
            
            echo "‚úÖ Deployment completed successfully!"